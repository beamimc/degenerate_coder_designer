diff --git a/gui.py b/gui.py
index 174e842..931c7c0 100644
--- a/gui.py
+++ b/gui.py
@@ -12,7 +12,7 @@ import plotly.graph_objects as go
 
 from plotly.subplots import make_subplots
 
-from src.dcg import generateCodon, get_equivalent_codons, get_coded_aas, check_
restriction_1
+from src.dcg import *
 from src.global_variables import *
 
 #render_svg function code from https://discuss.streamlit.io/t/is-there-a-way-to
-show-svg-url-as-an-image-in-streamlit/12461
@@ -22,31 +22,51 @@ def render_svg(svg):
     html = r'<img src="data:image/svg+xml;base64,%s"/>' % b64
     st.write(html, unsafe_allow_html=True)
 
-def main():
-    ''' To run GUI of Degenerate Codon Designer made with streamlit '''
     #config page
+
+    
+def main():
+    ''' To run GUI of Degenerate Codon Designer on streamlit '''
+    
+    ##strings to show explanation of examples
+    example_all='This is known as the â€˜MAXâ€™ degenerate codon set. This coul
d\
+    be used when we want to mutate the a certain position of the protein with a
ll\
+    amino acids. We want that position to be any of the 20 natural AAs, with eq
ual\
+    probabilities.'
+    
+    example_KRED='This set could be used to mutate one of the charged residues\

+    of a protein (e.g a voltage indicator) to either positively charged or nega
tively\
+    charged residues K, R, E, or D.'
+    example_polar='3'
+    examples = {'SNIRHLGDVCYFKTQPEAMW':example_all,
+                'KRED':example_KRED,
+                'STCNQ':example_polar}
+    
     st.set_page_config(
          page_title="Degenerate Codon Designer",
          page_icon="ðŸ”€",
          )
-    
+
     #upper nav bar
-    with st.container():
-        option = st.selectbox(
-         '',
-         ('Main page', 'See an example', ))
+    ##############
+    #just for the look - doesnt do anything (yet->intention to scale)
+    nav_bar =  st.container()
+    nav_option = st.selectbox('',
+         ('Main page', '', ))
     
     #show svg image as page title 
+    #########
     f = open("./static/logo.svg","r")
     lines = f.readlines()
     line_string=''.join(lines)
     render_svg(line_string)
     f.close()
     
-   
-    # st.subheader('Select AA set') 
+       
+    #show main menu 
+    ###############
     col1,col2 = st.columns(2)
-    col2.image('./static/chart.png','source: https://www.chegg.com/homework-hel
p/questions-and-answers/codon-chart-2-examine-first-set-codons-data-table-1-conv
ert-codons-amino-acids-code-record-q13230925')
+    col1.subheader('Select AA set')
     #set options and get input AAset from user
     options ={'All (SNIRHLGDVCYFKTQPEAMW)':'SNIRHLGDVCYFKTQPEAMW',
               'Charged (KREDH)':'KREDH',
@@ -56,12 +76,11 @@ def main():
               'Aromatic (FYW)':'FWY',
               'Custom':''
                 }
-
-    col1.subheader('Select AA set')
     option = col1.radio('Select one or more aminoacids\n', 
-                      list(options.keys()))
-    
+                  list(options.keys()))
+    col2.image('./static/chart.png','Source: https://che.gg/3Hhut5V')
     
+       
     #check if AAset is a valid input
     ok = True
     if option == 'Custom':
@@ -75,20 +94,23 @@ def main():
     else:
         AAset = options[option]
     AAset_ = AAset
-    AAset = set(AAset)    
+    AAset = set(AAset)   
+    
     #if valid iput, run program 
-
     if ok:
         info = st.info(f'Aminoacids selected: {AAset_}')
         #run button
+        ###########
         run = st.button('Design')
         if run:
             
             #show message while executing generateCodon(AAset)
+            ############
             with st.spinner('Designing degenerated codons...'):
                 combi_prop = generateCodon(AAset)
             info.empty()
             #show input
+            ############
             st.info(f'Aminoacids selected: {AAset_}')
                 
             #sort result to provide ratios in descendent order
@@ -99,9 +121,11 @@ def main():
             prop_str = ":".join(str(int(ele[1])) for ele in sorted_combi_prop)
             
             #show result in green box
-            st.success(f'Codon set: {combi_str}  ratio {prop_str}\n')
+            ############
+            st.success(f'{combi_str}  ratio {prop_str}\n')
             
-            #show result bigger 
+            #show result cooler 
+            ############
             #create 7 columns to get a better format
             cols = st.columns(7)
             for j in range(7):
@@ -134,29 +158,61 @@ def main():
                     mark_str+=('<ul><li>There are no equivalent codons</li></ul
><br/>')
                 aux[codon] = len(coded_aas)
                 
+            list_deg_codons= list(combi_prop.keys())
+            n_deg_nucl = get_num_deg_nucl(list_deg_codons)
+            #get total coded aas by codon set 
+            _, total_coded_aas = check_restriction_1(df_all,list(aux.keys()))  

+            #coutn how many aas are coded by codon set that are outside AAset
+            not_in= 0
+            for aa in total_coded_aas:
+                if aa not in AAset:
+                    not_in+=1
+                    
             #show infomation in an expander container 
+            ############
             with st.expander("See more information"):
-                st.markdown(mark_str,True)
-            #show legned in an expander container
+                col1, col2 = st.columns(2)
+                col1.markdown(mark_str,True)
+                with col2:
+                    st.metric('Number of degenerated codons',
+                                f'{int(len(list_deg_codons))}',
+                                '')
